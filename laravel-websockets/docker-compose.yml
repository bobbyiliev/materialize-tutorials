version: "3.9"
services:

  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    environment:
      - DB_CONNECTION=pgsql
      - MZ_HOST=materialized
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - APP_KEY=base64:1OUhW3QpgCgrHhv8x+B5a9pf7lnxwoymPUfcLhANenI=
      - BROADCAST_DRIVER=pusher
      - APP_URL=http://localhost
      - PUSHER_APP_ID=12345
      - PUSHER_APP_KEY=ABCDEFG
      - PUSHER_APP_SECRET=HIJKLMNOP
      - PUSHER_APP_CLUSTER=mt1
    ports:
      - 80:80
    volumes:
      - ${PWD}/laravel-app:/var/www/html:delegated
    depends_on:
      - php
      - postgres
    networks:
      - websockets

  websockets:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: websockets
    environment:
      - DB_CONNECTION=pgsql
      - MZ_HOST=materialized
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - APP_KEY=base64:1OUhW3QpgCgrHhv8x+B5a9pf7lnxwoymPUfcLhANenI=
      - BROADCAST_DRIVER=pusher
      - APP_URL=http://localhost
      - PUSHER_APP_ID=12345
      - PUSHER_APP_KEY=ABCDEFG
      - PUSHER_APP_SECRET=HIJKLMNOP
      - PUSHER_APP_CLUSTER=mt1
    ports:
      - 6001:6001
    command:
      - /bin/sh
      - -c
      - |
        echo "Waiting for postgres..."
        until nc -z postgres 5432; do
          sleep 0.1
        done
        echo "Check if composer install is ready..."
        until [ -d /var/www/html/vendor ]; do
          sleep 0.1
        done
        until [ -f /var/www/html/vendor/autoload.php ]; do
          sleep 0.1
        done
        echo "Postgres is up - running migrations and seeding"
        php artisan migrate && php artisan db:seed
        echo "Running websockets server"
        php artisan websockets:serve
    depends_on:
      - php
      - postgres
      - composer-install
    volumes:
      - ${PWD}/laravel-app:/var/www/html:delegated
    networks:
      - websockets

  postgres:
    build: ./postgres-image
    container_name: postgres
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=postgres
    volumes:
     - ${PWD}/postgres-image:/docker-entrypoint-initdb.d
    networks:
      - websockets

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    environment:
      - DB_CONNECTION=pgsql
      - MZ_HOST=materialized
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - APP_KEY=base64:1OUhW3QpgCgrHhv8x+B5a9pf7lnxwoymPUfcLhANenI=
      - BROADCAST_DRIVER=pusher
      - PUSHER_APP_ID=12345
      - PUSHER_APP_KEY=ABCDEFG
      - PUSHER_APP_SECRET=HIJKLMNOP
      - PUSHER_APP_CLUSTER=mt1
    volumes:
      - ${PWD}/laravel-app:/var/www/html:delegated
    networks:
      - websockets

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ${PWD}/laravel-app:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - websockets

  composer-install:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer-install
    volumes:
      - ${PWD}/laravel-app:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', 'install']
    networks:
      - websockets

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    environment:
      - MZ_HOST=materialized
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - APP_KEY=base64:1OUhW3QpgCgrHhv8x+B5a9pf7lnxwoymPUfcLhANenI=
      - BROADCAST_DRIVER=pusher
      - PUSHER_APP_ID=12345
      - PUSHER_APP_KEY=ABCDEFG
      - PUSHER_APP_SECRET=HIJKLMNOP
      - PUSHER_APP_CLUSTER=mt1
    volumes:
      - ${PWD}/laravel-app:/var/www/html:delegated
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - websockets

  materialized:
    image: materialize/materialized:v0.19.0
    container_name: materialized
    init: true
    command: -w1 --disable-telemetry --experimental
    ports:
      - 6875:6875
    networks:
      - websockets

  mzcli:
    image: materialize/cli
    container_name: mzcli
    networks:
      - websockets

  tradesgen:
    build: loadgen
    container_name: tradesgen
    depends_on:
      - app
    networks:
      - websockets

networks:
  websockets:
    driver: bridge
